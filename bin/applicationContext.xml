<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<tx:annotation-driven />
	<mvc:annotation-driven />

	<context:component-scan base-package="com.home.controller" />
	
	<!-- Needed for EntityManagerFactory -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="applicationContextProvider" class="com.home.ApplicationContextProvider">
	</bean>

	<bean id="appSettings" class="com.home.ApplicationSettings">
	</bean>

	<bean id="mailService" class="com.home.email.simple.SimpleMailService">
		<property name="host" value="${mailhost}" />
		<property name="port" value="${mailport}" />
		<property name="username" value="${mailusername}" />
		<property name="password" value="${mailpassword}" />
	</bean>

	<bean id="messageSourceOnJava"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>properties\validationMessages</value>
			</list>
		</property>
	</bean>

	<!-- Dozer Mapping -->
	<bean id="mapper" class="org.dozer.DozerBeanMapper">
		<property name="mappingFiles">
			<list>
			</list>
		</property>
	</bean>
	
	<!-- Datasources -->
	<bean id="dataSourceAws" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.aws.driverClassName}" />
		<property name="url" value="${jdbc.aws.url}" />
		<property name="username" value="${jdbc.aws.user}" />
		<property name="password" value="${jdbc.aws.password}" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="true" />
	</bean>

	<bean id="dataSourceCloudbees" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.cloudbess.driverClassName}" />
		<property name="url" value="${jdbc.cloudbess.url}" />
		<property name="username" value="${jdbc.cloudbess.user}" />
		<property name="password" value="${jdbc.cloudbess.password}" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="true" />
	</bean>
	
	<!-- JPA Entity Manager for Cloudbees Database -->
	<bean id="entityManagerFactoryCloudbees"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan">
			<list>
				<value>com.home.model.cloud</value>
			</list>
		</property>
		<property name="dataSource" ref="dataSourceCloudbees" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
				<property name="showSql" value="true" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManagerCloudbees" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactoryCloudbees" />
	</bean>

	<!-- JPA Entity Manager for AWS Database -->
	<bean id="entityManagerFactoryAws"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan">
			<list>
				<value>com.home.model.cloud</value>
			</list>
		</property>
		<property name="dataSource" ref="dataSourceAws" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
				<property name="showSql" value="true" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManagerAws" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactoryAws" />
	</bean>

	<!-- TASKS -->
	<bean id="scheduler" name="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		scope="singleton" lazy-init="false">
		<property name="autoStartup" value="true" />
		<property name="overwriteExistingJobs" value="true" />
		<property name="triggers">
			<list>
				<!-- bean class="org.springframework.scheduling.quartz.CronTriggerBean"> 
					<property name="cronExpression" value="${nightlyCronExpression}" /> <property 
					name="jobDetail" ref="placementClosureTaskDetail" /> </bean -->
			</list>
		</property>
	</bean>

	<!-- bean id="placementClosureTaskDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
		<property name="targetBeanName" value="placementClosureTask" /> <property 
		name="targetMethod" value="executeTask" /> <property name="concurrent" value="true" 
		/> </bean -->
	
	<!-- AWS APIS -->
	<bean id="awsCredentials"
		class="com.amazonaws.auth.BasicAWSCredentials">
	    <constructor-arg value="AKIAIAV5SZQ5U6AR36HQ" />
	    <constructor-arg value="wZPYlELGhhqKHxK/ZjK50bXXry+lQmwc9snxV6YN" />
	</bean>
	<!-- SES -->
	<bean id="emailServiceClient" class="com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient">
	    <constructor-arg ref="awsCredentials" />
	</bean>
	
	<!-- DAOS -->
	<bean id="trafficScoreDao" class="com.home.dao.implementations.CloudbeesJpaDao">
		<constructor-arg>
			<value>
				com.home.model.cloud.scoring.implementations.TrafficScore
			</value>
		</constructor-arg>
	</bean>
	
	<bean id="weatherScoreDao" class="com.home.dao.implementations.CloudbeesJpaDao">
		<constructor-arg>
			<value>
				com.home.model.cloud.scoring.implementations.WeatherScore
			</value>
		</constructor-arg>
	</bean>
	
	<bean id="footTrafficScoreDao" class="com.home.dao.implementations.CloudbeesJpaDao">
		<constructor-arg>
			<value>
				com.home.model.cloud.scoring.implementations.FootTrafficScore
			</value>
		</constructor-arg>
	</bean>
	
	<bean id="eventScoreDao" class="com.home.dao.implementations.CloudbeesJpaDao">
		<constructor-arg>
			<value>
				com.home.model.cloud.scoring.implementations.EventScore
			</value>
		</constructor-arg>
	</bean>
	
</beans>